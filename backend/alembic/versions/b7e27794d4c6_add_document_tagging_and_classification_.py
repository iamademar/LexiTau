"""Add document tagging and classification fields

Revision ID: b7e27794d4c6
Revises: e32b888b9f35
Create Date: 2025-08-28 01:29:58.818517

"""
from alembic import op
import sqlalchemy as sa


revision = 'b7e27794d4c6'
down_revision = 'e32b888b9f35'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create the enum type first
    op.execute("CREATE TYPE documentclassification AS ENUM ('REVENUE', 'EXPENSE')")
    
    # Add the new columns
    op.add_column('documents', sa.Column('client_id', sa.Integer(), nullable=True))
    op.add_column('documents', sa.Column('project_id', sa.Integer(), nullable=True))
    op.add_column('documents', sa.Column('category_id', sa.Integer(), nullable=True))
    
    # Add classification column as nullable first
    op.add_column('documents', sa.Column('classification', sa.Enum('REVENUE', 'EXPENSE', name='documentclassification'), nullable=True))
    
    # Update existing documents based on document_type
    op.execute("""
        UPDATE documents 
        SET classification = CASE 
            WHEN document_type = 'INVOICE' THEN 'REVENUE'::documentclassification
            WHEN document_type = 'RECEIPT' THEN 'EXPENSE'::documentclassification
            ELSE 'EXPENSE'::documentclassification
        END
    """)
    
    # Now make the column not nullable
    op.alter_column('documents', 'classification', nullable=False)
    
    # Create indexes and foreign keys
    op.create_index(op.f('ix_documents_category_id'), 'documents', ['category_id'], unique=False)
    op.create_index(op.f('ix_documents_classification'), 'documents', ['classification'], unique=False)
    op.create_index(op.f('ix_documents_client_id'), 'documents', ['client_id'], unique=False)
    op.create_index(op.f('ix_documents_project_id'), 'documents', ['project_id'], unique=False)
    op.create_foreign_key(None, 'documents', 'categories', ['category_id'], ['id'])
    op.create_foreign_key(None, 'documents', 'clients', ['client_id'], ['id'])
    op.create_foreign_key(None, 'documents', 'projects', ['project_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.drop_index(op.f('ix_documents_project_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_client_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_classification'), table_name='documents')
    op.drop_index(op.f('ix_documents_category_id'), table_name='documents')
    op.drop_column('documents', 'classification')
    op.drop_column('documents', 'category_id')
    op.drop_column('documents', 'project_id')
    op.drop_column('documents', 'client_id')
    
    # Drop the enum type
    op.execute("DROP TYPE documentclassification")
    # ### end Alembic commands ###